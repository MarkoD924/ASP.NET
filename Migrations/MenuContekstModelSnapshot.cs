// <auto-generated />
using Menu.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Menu.Migrations
{
    [DbContext(typeof(MenuContekst))]
    partial class MenuContekstModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Menu.Models.Jelo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<double>("Cena")
                        .HasColumnType("float");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ime")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Jela");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Cena = 1500.0,
                            ImageUrl = "https://images.prismic.io/eataly-us/ed3fcec7-7994-426d-a5e4-a24be5a95afd_pizza-recipe-main.jpg?auto=compress,format",
                            Ime = "Margarita"
                        });
                });

            modelBuilder.Entity("Menu.Models.Sastojak", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Ime")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Sastojci");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Ime = "Paradajz sos"
                        },
                        new
                        {
                            Id = 2,
                            Ime = "Mocarela"
                        });
                });

            modelBuilder.Entity("Menu.Models.SastojakJela", b =>
                {
                    b.Property<int>("JelaId")
                        .HasColumnType("int");

                    b.Property<int>("SastojciId")
                        .HasColumnType("int");

                    b.HasKey("JelaId", "SastojciId");

                    b.ToTable("SastojciJela");

                    b.HasData(
                        new
                        {
                            JelaId = 1,
                            SastojciId = 1
                        },
                        new
                        {
                            JelaId = 1,
                            SastojciId = 2
                        });
                });

            modelBuilder.Entity("Menu.Models.SastojakJela", b =>
                {
                    b.HasOne("Menu.Models.Jelo", "Jelo")
                        .WithMany("SastojciJela")
                        .HasForeignKey("JelaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Menu.Models.Sastojak", "Sastojak")
                        .WithMany("SastojciJela")
                        .HasForeignKey("JelaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Jelo");

                    b.Navigation("Sastojak");
                });

            modelBuilder.Entity("Menu.Models.Jelo", b =>
                {
                    b.Navigation("SastojciJela");
                });

            modelBuilder.Entity("Menu.Models.Sastojak", b =>
                {
                    b.Navigation("SastojciJela");
                });
#pragma warning restore 612, 618
        }
    }
}
